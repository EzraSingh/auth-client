{"version":3,"sources":["utils/auth.js","app/components/Navbar/components/Avatar.js","app/components/Navbar/components/Menu.js","app/components/Navbar/containers/MenuContainer.js","app/Profile/components/Tabs.js","app/Profile/containers/Menu.js","api.js","app/components/Navbar/index.js","app/Profile/components/Avatar.js","app/Profile/components/Content.js","app/Profile/containers/Home.js","actions/user.js","app/Profile/components/UpdateForm.js","app/Profile/containers/Update.js","app/components/Footer.js","app/Profile/index.js","actions/auth.js","app/Login/components/Form.js","app/Login/index.js","app/Register/components/Form.js","app/Register/index.js","app/components/Loader.js","app/Logout.js","app/index.js","reducers/auth.js","reducers/user.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["AuthMixin","connect","state","Object","objectSpread","auth","_ref","isLoggedIn","children","react_default","a","createElement","Redirect","exact","to","loginRequired","Component","props","Avatar","avatar","name","NavLink","id","className","src","process","alt","Menu","showMenu","this","setState","routes","map","route","href","key","generateRoutes","components_Avatar","profile","toggleIcon","cx","fa-window-close","fa-bars","onClick","toggleMenu","bind","smartHideStyle","zIndex","style","renderMenu","renderMobileMenu","Route","hideOnAuth","MenuContainer","filter","components_Menu","assign","user","Tabs","items","item","activeClassName","components_Tabs","api","axios","create","baseURL","headers","Access-Control-Allow-Origin","Authorization","interceptors","request","use","config","sessionStorage","getItem","err","Promise","reject","Content","Home","loadProfile","react","Profile_components_Avatar","components_Content","dispatch","type","get","then","res","_res$data","data","email","catch","toast","warn","UpdateForm","handleSubmit","onSubmit","htmlFor","placeholder","value","Update","redirect","event","preventDefault","FormData","target","_this","update","components_UpdateForm","cb","_ref2","put","message","Footer","rel","View","action","containers_Update","containers_Home","withNav","match","containers_Menu","Profile_View","params","components_Footer","containers_MenuContainer","loginAttempt","LoginForm","setInterval","reveal","login","password","toggleVisibility","required","Link","credentials","post","status","token","success","error","Login","Form","RegisterForm","register","confirm","response","Register","components_Form","Loader","Logout","logout","nextProps","components_Loader","Views","window","scrollTo","Switch","path","component","Profile","defaultState","arguments","length","undefined","setItem","removeItem","authDefaultState","userDefaultState","appReducer","combineReducers","rootReducer","middleware","applyMiddleware","thunk","logger","createStore","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","App","BrowserRouter","es","store","lib","app","ReactDOM","render","document","getElementById","URL","origin","addEventListener","concat","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.feb07c2f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst AuthMixinBase = ({ isLoggedIn, children }) => {\r\n    return !isLoggedIn ? <Redirect exact to='/'/> : children\r\n}\r\n\r\nAuthMixinBase.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state.auth }\r\n}\r\n\r\nconst AuthMixin = connect(mapStateToProps)(AuthMixinBase)\r\n\r\nconst loginRequired = Component => props => {\r\n    return(\r\n        <AuthMixin>\r\n            <Component {...props}/>\r\n        </AuthMixin>\r\n    )\r\n}\r\n\r\nexport default AuthMixin\r\nexport { loginRequired }","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Avatar = ({ avatar, name }) => {\r\n    return(\r\n        <NavLink id=\"avatar\" to=\"/profile\">\r\n            <figure className=\"is-64 is-round\">\r\n                <img\r\n                    src={avatar || process.env.REACT_APP_DEFAULT_AVATAR} \r\n                    alt={name}\r\n                />\r\n            </figure>\r\n        </NavLink>\r\n    )\r\n}\r\n\r\nAvatar.propTypes = {\r\n    avatar: PropTypes.string,\r\n    name: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Avatar","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport cx from 'classnames'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Avatar from './Avatar'\r\n\r\nclass Menu extends Component{\r\n    state = { showMenu: false }\r\n    toggleMenu(){\r\n        this.setState({ showMenu: !this.state.showMenu })\r\n    }\r\n    generateRoutes(){\r\n        return this.props.routes.map((route) => (\r\n            <NavLink to={route.href} key={route.href}>\r\n                {route.name}\r\n            </NavLink>\r\n        ))\r\n    }\r\n    renderMenu(){\r\n        return(\r\n            <div className=\"container\">\r\n                {this.generateRoutes()}\r\n                {this.props.isLoggedIn && <Avatar {...this.props.profile}/>}\r\n            </div>\r\n        )\r\n    }\r\n    renderMobileMenu(){\r\n        const { showMenu } = this.state\r\n        const toggleIcon = cx(\"fa\", { \"fa-window-close\" : showMenu, \"fa-bars\" : !showMenu })\r\n        return(\r\n            <div id=\"mobile\" className=\"container\">\r\n                <i \r\n                    onClick={this.toggleMenu.bind(this)}\r\n                    className={toggleIcon}\r\n                />\r\n                <div className=\"menu\">\r\n                    {showMenu && this.generateRoutes()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    render(){\r\n        /** Toggles z-index to slide behind content when showMenu is false and overlay menu is active **/\r\n        const smartHideStyle = { zIndex: this.state.showMenu ? 100 : 0 } \r\n        return(\r\n            <nav style={smartHideStyle} className=\"navbar\">\r\n                {this.renderMenu()}\r\n                {this.renderMobileMenu()}\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nMenu.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    routes: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        href: PropTypes.string.isRequired\r\n    })).isRequired,\r\n    isLoggedIn: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Menu","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Menu from '../components/Menu'\r\n\r\n/**\r\n * Route template for registering routes within Navbar\r\n * @param {} name - Nav item title \r\n * @param {} href - Nav link\r\n * @param {} auth - display only for logged in users\r\n * @param {} hideOnAuth - display only for anonymous users\r\n */\r\nfunction Route(name, href, auth, hideOnAuth){\r\n    this.name = name\r\n    this.href = href\r\n    this.auth = auth\r\n    this.hideOnAuth = hideOnAuth\r\n}\r\n\r\nclass MenuContainer extends Component{\r\n    static routes = [\r\n        new Route('Profile', '/profile', { auth: true }),\r\n        new Route('Logout', '/logout', { auth: true })\r\n    ]\r\n    /** Filter routes that require authentication */\r\n    generateRoutes(){\r\n        if(!this.props.isLoggedIn){\r\n            // Filter routes that do not require auth\r\n            return MenuContainer.routes.filter((route) => !route.auth)\r\n        }\r\n        else{\r\n            // Filter routes that require auth and are not flagged to hide on auth\r\n            return MenuContainer.routes.filter((route) => route.auth && !route.hideOnAuth)\r\n        }\r\n    }\r\n    render(){\r\n        return <Menu routes={this.generateRoutes()} {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        ...state.auth, \r\n        profile: {\r\n            avatar: state.user.profile.avatar,\r\n            name: state.user.profile.name\r\n        }\r\n    }\r\n}\r\n\r\nexport { MenuContainer }\r\nexport default connect(mapStateToProps)(MenuContainer)","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Tabs = ({ items }) => {\r\n    return(\r\n        <ul>\r\n            {items.map((item) => (\r\n                <li key={item.href}>\r\n                    <NavLink\r\n                        activeClassName=\"is-active\"\r\n                        to={item.href}\r\n                        children={item.name}\r\n                        {...item}\r\n                    />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nTabs.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        href: PropTypes.string.isRequired,\r\n        exact: PropTypes.bool\r\n    }))\r\n}\r\n\r\nexport default Tabs","import React, { Component } from 'react'\r\nimport Tabs from '../components/Tabs'\r\n\r\nclass Menu extends Component{\r\n    static items = [ \r\n        { name: 'Home', href: '/profile/home' },\r\n        { name: 'Edit', href: '/profile/update' }\r\n    ]\r\n\r\n    render(){\r\n        return(\r\n            <nav className=\"menu is-sticky\">\r\n                <Tabs items={Menu.items}/>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu","import axios from 'axios'\r\n\r\n/**\r\n * Axios configuration\r\n */\r\nconst api = axios.create({\r\n    baseURL : process.env.REACT_APP_API_URL,\r\n    headers: { \r\n        'Access-Control-Allow-Origin' : '*',\r\n        'Authorization' : null\r\n    }\r\n})\r\n\r\n// Inject concurrent auth token into each request\r\napi.interceptors.request.use((config) => {\r\n    config.headers.Authorization = sessionStorage.getItem('token')\r\n    return config\r\n}, err => Promise.reject(err))\r\n\r\n\r\nexport default api","import React, { Fragment } from 'react'\r\nimport { default as Navbar } from './containers/MenuContainer'\r\n\r\nconst withNav = Component => props => {\r\n    return(\r\n        <Fragment>\r\n            <Navbar/>\r\n            <div className=\"navbar-container\">\r\n                <Component {...props}/>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\nexport { withNav }","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Avatar = ({ profile }) =>{\r\n    return(\r\n        <div id=\"avatar\">\r\n            <figure className=\"is-square is-128\">\r\n                <img src={profile.avatar || process.env.REACT_APP_DEFAULT_AVATAR} alt=\"\"/>\r\n                <figcaption>{profile.name}</figcaption>\r\n            </figure>\r\n        </div>\r\n    )\r\n}\r\n\r\nAvatar.propTypes = {\r\n    profile: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        avatar: PropTypes.string\r\n    }).isRequired\r\n}\r\n\r\nexport default Avatar","import React from 'react'\r\n\r\nconst Content = () => {\r\n    return(\r\n        <section className=\"content\">\r\n            <figure className=\"is-256\">\r\n                <img className=\"h-center\" src={process.env.REACT_APP_MISSING_CONTENT_IMG} alt=\"\"/>\r\n                <figcaption>More features coming soon!</figcaption>\r\n            </figure>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Content","import React, { Component, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { profile } from 'actions/user'\r\nimport Avatar from '../components/Avatar'\r\nimport Content from '../components/Content'\r\n\r\nclass Home extends Component{\r\n    static propTypes = {\r\n        user: PropTypes.object.isRequired,\r\n        loadProfile: PropTypes.func.isRequired\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.loadProfile()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <Avatar {...this.props.user}/>\r\n                <hr/>\r\n                <Content/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { user: state.user }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { loadProfile: () => dispatch(profile()) }\r\n}\r\n\r\nexport { Home as HomeView }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import api from 'api'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport const register = ({ email, password, confirm }) => {\r\n    return dispatch => {\r\n        if(password !== confirm){\r\n            toast.error('Passwords do not match.')\r\n            dispatch({ type : 'PASSWORD_CONFIRMATION_FAILED' })\r\n        }\r\n        else{\r\n            dispatch({ type : 'REGISTERING_USER' })\r\n            api.post('/user', { email, password, confirm })\r\n            .then((res) => {\r\n                const { message } = res.data\r\n                if(res.status === 200){\r\n                    toast.success('Account registered!')\r\n                    toast('Please sign in.')\r\n                    dispatch({ type : 'USER_CREATED', message })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                const { message } = err.response.data\r\n                toast.error(message)\r\n                dispatch({ type: 'REGISTRATION_FAILED', message })\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const profile = () => {\r\n    return dispatch => {\r\n        dispatch({ type : 'FETCHING_PROFILE' })\r\n        api.get('/user')\r\n        .then((res) => {\r\n            const { email, profile } = res.data\r\n            dispatch({ type : 'USER_PROFILE', user : { email, profile } })\r\n        })\r\n        .catch((err) => {\r\n            toast.warn('Login required.')\r\n            dispatch({ type: 'LOGIN_REQUIRED' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const update = ({ name }) => {\r\n    return dispatch => {\r\n        dispatch({ type: 'UPDATING_PROFILE' })\r\n        api.put('/user', { name })\r\n        .then((res) => {\r\n            const { message } = res.data\r\n            toast('Profile updated.')\r\n            dispatch({ \r\n                type: 'PROFILE_UPDATED', \r\n                message, \r\n                profile: { name } \r\n            })\r\n        })\r\n        .catch((err) => {\r\n            toast.warn('Login required.')\r\n            dispatch({ type: 'LOGIN_REQUIRED' })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst UpdateForm = ({ name, handleSubmit }) => {\r\n    return(\r\n        <form onSubmit={handleSubmit} className=\"animated fadeInUp faster\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input id=\"name\" name=\"name\" placeholder={name || ''}/>\r\n\r\n            <input type=\"submit\" className=\"btn\" value=\"Save\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nUpdateForm.propTypes = {\r\n    name: PropTypes.string,\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default UpdateForm","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { update } from 'actions/user'\r\nimport UpdateForm from '../components/UpdateForm'\r\n\r\nclass Update extends Component{\r\n    state = { redirect: false }\r\n    static propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        update: PropTypes.func.isRequired\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const data = new FormData(event.target)\r\n        this.props.update({\r\n            name : data.get('name')\r\n        }, () => {\r\n            this.setState({ redirect: true })\r\n        })\r\n    }\r\n    render(){\r\n        if(this.state.redirect){\r\n            return <Redirect to=\"/profile/home\"/>\r\n        }\r\n        return <UpdateForm name={this.props.name} handleSubmit={this.handleSubmit}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { name: state.user.profile.name }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { update : (profile, cb) => { \r\n            dispatch(update(profile))\r\n            cb()\r\n        }\r\n    }\r\n}\r\n\r\nexport { Update as UpdateView }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Update)","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <footer>\r\n            By \r\n            <a href=\"https://github.com/EzraSingh\" target=\"_BLANK\" rel=\"noopener noreferrer\">\r\n                Ezra Singh,\r\n            </a>\r\n            browse the source on\r\n            <a href=\"https://github.com/EzraSingh/auth-client\" target=\"_BLANK\" rel=\"noopener noreferrer\">\r\n                <i className=\"fab fa-github\"/>\r\n            </a>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withNav } from 'app/components/Navbar'\r\nimport Menu from './containers/Menu'\r\nimport Home from './containers/Home'\r\nimport Update from './containers/Update'\r\nimport Footer from 'app/components/Footer'\r\n\r\nconst View = ({ action }) => {\r\n    switch(action){\r\n        case 'update':\r\n            return <Update/>\r\n        case 'home':\r\n            return <Home/>\r\n        default:\r\n            return <Redirect to=\"/profile/home\"/>\r\n    }\r\n}\r\n\r\nconst Profile = ({ match }) => {\r\n    return(\r\n        <section id=\"profile\" className=\"view\">\r\n            <Menu/>\r\n            <div className=\"container\">\r\n                <View {...match.params}/>\r\n            </div>\r\n            <Footer/>\r\n        </section>\r\n    )\r\n}\r\n\r\nView.propTypes = { action: PropTypes.string }\r\n\r\nProfile.propTypes = {\r\n    match: PropTypes.shape({\r\n        params: PropTypes.object.isRequired\r\n    }).isRequired\r\n}\r\n\r\nexport { Profile, View }\r\nexport default withNav(Profile)","import api from 'api'\r\nimport { toast } from 'react-toastify'\r\n\r\nlet loginAttempt = 0\r\n\r\n/** Throttle logins by resetting loginAttempt after some time */\r\n// eslint-disable-next-line\r\nconst loginResetHandler = setInterval(\r\n    () => { loginAttempt = 0 },\r\n    1000 * process.env.REACT_APP_LOGIN_TIMEOUT\r\n)\r\n\r\n// TODO: Disable throttling after login and re-enable after logout to prevent memory leaking\r\n\r\nexport const login = ({ email, password }) => {\r\n    loginAttempt++\r\n    return dispatch => {\r\n        if(loginAttempt > process.env.REACT_APP_MAX_LOGIN_ATTEMPTS){\r\n            toast.warn('Too many login attempts.')\r\n            dispatch({ type : 'LOGIN_TIMEOUT' })\r\n        }\r\n        else{\r\n            dispatch({ type : 'LOGIN_ATTEMPT' })\r\n            api.post('/authenticate', { email, password })\r\n            .then((res) => {\r\n                if(res.status === 200 && res.data.token){\r\n                    const { token } = res.data\r\n                    loginAttempt = 0\r\n                    toast.success('Login successful, welcome!')\r\n                    dispatch({ type : 'LOGIN', token, email })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                toast.error('Login failed.')\r\n                dispatch({ type : 'LOGIN_FAILURE' })\r\n            })\r\n        }\r\n    }\r\n}    \r\n\r\nexport const logout = () => { \r\n    return dispatch => {\r\n        dispatch({ type : 'LOGOUT' })\r\n        toast('Thank you come again.')\r\n        dispatch({ type : 'RESET_APP' })\r\n    }\r\n }","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login } from 'actions/auth'\r\n\r\nclass LoginForm extends Component{\r\n    state = { reveal: false }\r\n    static propTypes = { \r\n        redirect: PropTypes.bool.isRequired,\r\n        login: PropTypes.func.isRequired\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const data = new FormData(event.target)\r\n        this.props.login({ \r\n            email : data.get('email'),\r\n            password : data.get('password')\r\n        })\r\n    }\r\n    toggleVisibility = () => {\r\n        this.setState({ reveal: !this.state.reveal })\r\n    }\r\n    render(){\r\n        if(this.props.redirect){\r\n            return <Redirect to='/profile'/>\r\n        }\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <header>\r\n                    <h3>Login</h3>\r\n                    <p>Authenticate identity</p>\r\n                </header>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input id=\"email\" name=\"email\" type=\"email\" required/>\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input id=\"password\" name=\"password\" type={this.state.reveal ? \"text\" : \"password\"} required/>\r\n                <div className=\"hide-show\">\r\n                    <span onClick={this.toggleVisibility}>\r\n                        {this.state.reveal ? 'Hide' : 'Show'}\r\n                    </span>\r\n                </div>\r\n                <input className=\"btn\" type=\"submit\" value=\"Login\"/>\r\n                <div className=\"prompt\">\r\n                    <Link to='/register'>Don't have an account?</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { redirect: state.auth.isLoggedIn }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { login: credentials => dispatch(login(credentials)) }\r\n}\r\n\r\nexport { LoginForm }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import React from 'react'\r\nimport Form from './components/Form'\r\n\r\nconst Login = () => {\r\n    return(\r\n        <section id=\"login\" className=\"view\">\r\n            <div className=\"container animated fadeIn\">\r\n                <Form/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { register } from 'actions/user'\r\n\r\nclass RegisterForm extends Component{\r\n    static propTypes = {\r\n        redirect: PropTypes.bool.isRequired,\r\n        register: PropTypes.func.isRequired\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const data = new FormData(event.target)\r\n        this.props.register({\r\n            email : data.get('email'),\r\n            password : data.get('password'),\r\n            confirm : data.get('confirm')\r\n        })\r\n    }\r\n    render(){\r\n        if(this.props.redirect){\r\n            return <Redirect exact to='/'/>\r\n        }\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <header>\r\n                    <h3>Register</h3>\r\n                    <p>Create a new user</p>\r\n                </header>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input name=\"email\" id=\"email\" type=\"email\" required/>\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input name=\"password\" id=\"password\" type=\"password\" required/>\r\n                \r\n                <label htmlFor=\"confirm\">Confirm Password</label>\r\n                <input name=\"confirm\" id=\"confirm\" type=\"password\" required/>\r\n\r\n                <input type=\"submit\" className=\"btn\" value=\"Create Account\"/>\r\n\r\n                <div className=\"prompt\">\r\n                    <Link to='/'>Already have an account?</Link>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // NOTE: user.email when null indicates user has not been created\r\n    return { redirect : state.user.email === false }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { register : (credentials) => dispatch(register(credentials)) }\r\n}\r\n\r\nexport { RegisterForm }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm)","import React from 'react'\r\nimport Form from './components/Form'\r\n\r\nconst Register = () => {\r\n    return(\r\n        <section id=\"register\" className=\"view\">\r\n            <div className=\"container animated fadeIn\">\r\n                <Form/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Register","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return <div className='sk-rotating-plane'/>\r\n}\r\n\r\nexport default Loader","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from 'actions/auth'\r\nimport Loader from 'app/components/Loader'\r\n\r\nclass Logout extends Component{\r\n    static propTypes = {\r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n        logout: PropTypes.func.isRequired\r\n    }\r\n    componentWillMount(){\r\n        this.props.logout()\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps){\r\n        return nextProps.isLoggedIn !== this.props.isLoggedIn\r\n    }\r\n\r\n    render(){\r\n        const { isLoggedIn } = this.props\r\n        return isLoggedIn ? <Loader/> : <Redirect exact to=\"/\"/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state.auth }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { logout : () => dispatch(logout()) }\r\n}\r\n\r\nexport { Logout as LogoutComponent }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { loginRequired } from 'utils/auth'\r\nimport Profile from './Profile'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport Logout from './Logout'\r\n\r\nconst Views = () => {\r\n    window.scrollTo(0,0)\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login}/>\r\n            <Route path=\"/register\" component={Register}/>\r\n            <Route path=\"/profile/:action?\" component={loginRequired(Profile)}/>\r\n            <Route path=\"/logout\" component={loginRequired(Logout)}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Views","export const defaultState = {\r\n    get isLoggedIn(){\r\n        return !!sessionStorage.getItem('token')\r\n    }\r\n}\r\n\r\nconst auth = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            sessionStorage.setItem('token', action.token)\r\n            return { isLoggedIn: true }\r\n        case 'LOGOUT':\r\n            sessionStorage.removeItem('token')\r\n            return { isLoggedIn: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth","\r\nexport const defaultState =  { \r\n    email : null,\r\n    profile: { avatar: null, name: '' }\r\n}\r\n\r\nconst user = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            // TODO: Login payload should include profile\r\n            return { ...state, email: action.email }\r\n        case 'USER_CREATED':\r\n            // NOTE: Setting email to 'false' rather than null is an indicator that user creation succeeded\r\n            // This subtle change has the neat benefit of preventing anonymous users\r\n            // from creating multiple accounts\r\n            return { ...state, email: false }\r\n        case 'USER_PROFILE':\r\n            return { ...action.user }\r\n        case 'PROFILE_UPDATED':\r\n            return { ...state, profile: action.profile }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { combineReducers } from 'redux'\r\nimport auth, { defaultState as authDefaultState } from './auth'\r\nimport user, { defaultState as userDefaultState } from './user'\r\n\r\nexport const defaultState = { \r\n    auth: authDefaultState,\r\n    user: userDefaultState\r\n}\r\n\r\nconst appReducer = combineReducers({ auth, user })\r\n\r\nconst rootReducer = (state, action) => {\r\n    if(action.type === 'RESET_APP'){\r\n        state = defaultState\r\n    }\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport rootReducer, { defaultState } from 'reducers'\r\n\r\nconst middleware = applyMiddleware(thunk, logger)\r\n\r\nexport default createStore(\r\n    rootReducer, \r\n    defaultState,\r\n    process.env.NODE_ENV === 'production' ? middleware : composeWithDevTools(middleware),\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport Views from 'app'\r\nimport store from 'store'\r\nimport * as serviceWorker from 'serviceWorker'\r\nimport 'styles/core.scss'\r\n\r\nconst App = (\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <ToastContainer/>\r\n            <Views/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(App, document.getElementById('app-root'))\r\n\r\nif(process.env.NODE_ENV === 'production'){\r\n    serviceWorker.register()\r\n}\r\nelse{\r\n    serviceWorker.unregister()\r\n}\r\n\r\n"],"sourceRoot":""}
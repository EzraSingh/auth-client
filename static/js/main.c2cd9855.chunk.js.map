{"version":3,"sources":["utils/auth.js","app/components/Navbar.js","utils/Loader.js","app/Profile/components/Card.js","api.js","app/Profile/containers/CardContainer.js","actions/user.js","app/Profile/index.js","app/Update/components/Form.js","app/Update/index.js","utils/withNavbar.js","actions/auth.js","app/Login/components/Form.js","app/Login/index.js","app/Register/components/Form.js","app/Register/index.js","app/Logout.js","app/index.js","reducers/auth.js","reducers/user.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["AuthMixin","connect","state","Object","objectSpread","auth","_ref","isLoggedIn","children","react_default","a","createElement","Redirect","exact","to","loginRequired","Component","props","Navbar","renderAvatar","className","NavLink","src","_this","avatar","process","alt","name","this","routes","filter","route","hideOnAuth","generateRoutes","map","href","key","user","profile","Loader","Card","email","Link","api","axios","create","baseURL","headers","Access-Control-Allow-Origin","Authorization","interceptors","request","use","config","sessionStorage","getItem","err","Promise","reject","CardContainer","loadProfile","_this$props","isLoading","utils_Loader","components_Card","dispatch","type","get","then","res","_res$data","data","catch","Profile","components_Navbar","id","containers_CardContainer","UpdateForm","redirect","handleSubmit","event","preventDefault","FormData","target","update","onSubmit","htmlFor","placeholder","isEmpty","value","_ref2","put","message","withNavbar","react","Form","loginAttempt","LoginForm","setInterval","show","login","password","toggleVisibility","setState","required","onClick","credentials","post","status","token","Login","components_Form","RegisterForm","register","confirm","response","Register","Register_components_Form","Logout","logout","Views","Switch","Route","path","component","Update","defaultState","arguments","length","undefined","action","setItem","removeItem","authDefaultState","userDefaultState","appReducer","combineReducers","rootReducer","middleware","applyMiddleware","thunk","logger","createStore","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","App","BrowserRouter","es","store","app","ReactDOM","render","document","getElementById","URL","origin","addEventListener","concat","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"4OAkBMA,EAAYC,YAJM,SAAAC,GACpB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAMG,OAGJJ,CAbI,SAAAK,GAA8B,IAA3BC,EAA2BD,EAA3BC,WAAYC,EAAeF,EAAfE,SACjC,OAAQD,EAAwCC,EAA3BC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,GAAG,QActCC,EAAgB,SAAAC,GAAS,OAAI,SAAAC,GAC/B,OACIR,EAAAC,EAAAC,cAACX,EAAD,KACIS,EAAAC,EAAAC,cAACK,EAAcC,wDCVrBC,6MAoBFC,aAAe,WACX,OACIV,EAAAC,EAAAC,cAAA,UAAQS,UAAU,oCACdX,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASP,GAAG,YACRL,EAAAC,EAAAC,cAAA,OACIW,IAAKC,EAAKN,MAAMO,QAAUC,uFAC1BC,IAAKH,EAAKN,MAAMU,0FAfhC,OAAIC,KAAKX,MAAMV,WAMJW,EAAOW,OAAOC,OAAO,SAACC,GAAD,OAAWA,EAAM1B,OAAS0B,EAAMC,aAJrDd,EAAOW,OAAOC,OAAO,SAACC,GAAD,OAAYA,EAAM1B,wCAoBlD,OACII,EAAAC,EAAAC,cAAA,OAAKS,UAAU,oCACVQ,KAAKK,iBAAiBC,IAAI,SAACH,GAAD,OACvBtB,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAASD,UAAU,wBAAwBN,GAAIiB,EAAMI,KAAMC,IAAKL,EAAMI,MACjEJ,EAAMJ,QAGdC,KAAKX,MAAMV,YAAcqB,KAAKT,uBAxC1BH,aAAfE,EAMKW,OAAS,CACZ,IAdR,SAAeF,EAAMQ,EAAM9B,EAAM2B,GAC7BJ,KAAKD,KAAOA,EACZC,KAAKO,KAAOA,EACZP,KAAKvB,KAAOA,EACZuB,KAAKI,WAAaA,EAUd,CAAU,SAAU,WAAW,IAuCvC,IAKe/B,cALS,SAAAC,GACpB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAMG,KAAlB,CAAwBmB,OAAQtB,EAAMmC,KAAKC,QAAQd,OAAQG,KAAMzB,EAAMmC,KAAKC,QAAQX,QAIzE1B,CAAyBiB,GCxDzBqB,EANA,WACX,OACI9B,EAAAC,EAAAC,cAAA,iCC+BO6B,EA/BF,SAAAlC,GAAwB,IAArBmC,EAAqBnC,EAArBmC,MAAOH,EAAchC,EAAdgC,QACbd,EAASc,EAAQd,QAAUC,uFACjC,OACIhB,EAAAC,EAAAC,cAAA,WAASS,UAAU,0BACfX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,UACXX,EAAAC,EAAAC,cAAA,UAAQS,UAAU,6BACdX,EAAAC,EAAAC,cAAA,OAAKW,IAAKE,EAAQE,IAAI,aAG9BjB,EAAAC,EAAAC,cAAA,OAAKS,UAAU,0CACXX,EAAAC,EAAAC,cAAA,QAAMS,UAAU,SACZX,EAAAC,EAAAC,cAAA,UAAK2B,EAAQX,MACblB,EAAAC,EAAAC,cAAA,UAAK8B,IAEThC,EAAAC,EAAAC,cAAA,OAAKS,UAAU,gBACXX,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAMtB,UAAU,SAASN,GAAG,mBAA5B,8BCdd6B,SAAMC,EAAMC,OAAO,CACrBC,QAAUrB,4BACVsB,QAAS,CACLC,8BAAgC,IAChCC,cAAkB,QAK1BN,EAAIO,aAAaC,QAAQC,IAAI,SAACC,GAE1B,OADAA,EAAON,QAAQE,cAAgBK,eAAeC,QAAQ,SAC/CF,GACR,SAAAG,GAAG,OAAIC,QAAQC,OAAOF,KAGVb,QCbTgB,+LAQE/B,KAAKX,MAAM2C,+CAGP,IAAAC,EACkCjC,KAAKX,MAAnC6C,EADJD,EACIC,UAAWrB,EADfoB,EACepB,MAAOH,EADtBuB,EACsBvB,QAC1B,OAAOwB,EAAYrD,EAAAC,EAAAC,cAACoD,EAAD,MAAYtD,EAAAC,EAAAC,cAACqD,EAAS,CAACvB,QAAOH,mBAb7BtB,aA0Bbf,cATS,SAAAC,GACpB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAMmC,KAAlB,CAAwByB,WAAY5D,EAAMmC,KAAKI,SAGxB,SAAAwB,GACvB,MAAO,CAAEL,YAAa,kBAAMK,ECJrB,SAAAA,GACHA,EAAS,CAAEC,KAAO,qBAClBvB,EAAIwB,IAAI,SACPC,KAAK,SAACC,GAAQ,IAAAC,EACgBD,EAAIE,KAAvB9B,EADG6B,EACH7B,MAAOH,EADJgC,EACIhC,QACf2B,EAAS,CAAEC,KAAO,eAAgB7B,KAAO,CAAEI,QAAOH,eAErDkC,MAAM,SAAChB,GACJS,EAAS,CAAEC,KAAM,0BDAdjE,CAA6C0D,GElB7Cc,EAXC,WACZ,OACIhE,EAAAC,EAAAC,cAAA,OAAKS,UAAU,mBACXX,EAAAC,EAAAC,cAAC+D,EAAD,MACAjE,EAAAC,EAAAC,cAAA,OAAKgE,GAAG,iBAAiBvD,UAAU,0BAC/BX,EAAAC,EAAAC,cAACiE,EAAD,iBCHVC,6MAMF3E,MAAQ,CAAE4E,UAAU,KACpBC,aAAe,SAAAC,GACXA,EAAMC,iBACN,IAAMV,EAAO,IAAIW,SAASF,EAAMG,QAChC5D,EAAKN,MAAMmE,OAAO,CACdzD,KAAO4C,EAAKJ,IAAI,mFAGhB,IACI7B,EAAYV,KAAKX,MAAjBqB,QACR,OACI7B,EAAAC,EAAAC,cAAA,QAAM0E,SAAUzD,KAAKmD,cACjBtE,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,QAAf,QACA7E,EAAAC,EAAAC,cAAA,SAAOgE,GAAG,OAAOhD,KAAK,OAAO4D,aAAcC,kBAAQlD,IAAY,SAAUA,GAAWA,EAAQX,OAE5FlB,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,SAASuB,MAAM,iBArBlBzE,aAoCVf,cATS,SAAAC,GACpB,MAAO,CAAEoC,QAASpC,EAAMmC,KAAKC,UAGN,SAAA2B,GACvB,MAAO,CAAEmB,OAAS,SAAA9C,GAAO,OAAI2B,EFAX,SAAAyB,GAAc,IAAX/D,EAAW+D,EAAX/D,KACrB,OAAO,SAAAsC,GACHA,EAAS,CAAEC,KAAM,qBACjBvB,EAAIgD,IAAI,QAAS,CAAEhE,SAClByC,KAAK,SAACC,GAAQ,IACHuB,EAAYvB,EAAIE,KAAhBqB,QACR3B,EAAS,CACLC,KAAM,kBACN0B,UACAtD,QAAS,CAAEX,YAGlB6C,MAAM,SAAChB,GACJS,EAAS,CAAEC,KAAM,sBEbakB,CAAO9C,OAIlCrC,CAA6C4E,GC3B7CgB,ECZI,SAAA7E,GAAS,OAAI,SAAAC,GAC5B,OACIR,EAAAC,EAAAC,cAACmF,EAAA,SAAD,KACIrF,EAAAC,EAAAC,cAAC+D,EAAD,MACAjE,EAAAC,EAAAC,cAACK,EAAcC,KDQZ4E,CAXA,WACX,OACIpF,EAAAC,EAAAC,cAAA,OAAKS,UAAU,iDACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACXX,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACoF,EAAD,UEPZC,EAAe,ECIbC,GDAoBC,YACtB,WAAQF,EAAe,GACvB,gNCGA9F,MAAQ,CAAEiG,MAAM,KAChBpB,aAAe,SAAAC,GACXA,EAAMC,iBACN,IAAMV,EAAO,IAAIW,SAASF,EAAMG,QAChC5D,EAAKN,MAAMmF,MAAM,CACb3D,MAAQ8B,EAAKJ,IAAI,SACjBkC,SAAW9B,EAAKJ,IAAI,iBAG5BmC,iBAAmB,WACf/E,EAAKgF,SAAS,CAAEJ,MAAO5E,EAAKrB,MAAMiG,gFAGlC,OAAGvE,KAAKX,MAAMV,WACHE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUE,GAAG,aAGpBL,EAAAC,EAAAC,cAAA,QAAM0E,SAAUzD,KAAKmD,cACjBtE,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOgE,GAAG,QAAQhD,KAAK,QAAQuC,KAAK,QAAQsC,UAAQ,IAEpD/F,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,WAEI7E,EAAAC,EAAAC,cAAA,KACIS,UAAWQ,KAAK1B,MAAMiG,KAAO,aAAe,mBAC5CM,QAAS7E,KAAK0E,oBAGtB7F,EAAAC,EAAAC,cAAA,SAAOgE,GAAG,WAAWhD,KAAK,WAAWuC,KAAMtC,KAAK1B,MAAMiG,KAAO,OAAS,WAAYK,UAAQ,IAE1F/F,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOS,UAAU,wBAAwB8C,KAAK,SAASuB,MAAM,kBApCrDzE,cAmDTf,cATS,SAAAC,GACpB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAMG,OAGK,SAAA4D,GACvB,MAAO,CAAEmC,MAAO,SAAAM,GAAW,OAAIzC,EDxCd,SAAA3D,GAAyB,IAAtBmC,EAAsBnC,EAAtBmC,MAAO4D,EAAe/F,EAAf+F,SAE3B,OADAL,IACO,SAAA/B,GACA+B,EAAevE,IACdwC,EAAS,CAAEC,KAAO,mBAGlBD,EAAS,CAAEC,KAAO,kBAClBvB,EAAIgE,KAAK,gBAAiB,CAAElE,QAAO4D,aAClCjC,KAAK,SAACC,GACH,GAAkB,MAAfA,EAAIuC,OAAe,KACVC,EAAUxC,EAAIE,KAAdsC,MACRb,EAAe,EACf/B,EAAS,CAAEC,KAAO,QAAS2C,aAGlCrC,MAAM,SAAChB,GACJS,EAAS,CAAEC,KAAO,sBCuBUkC,CAAMM,OAInCzG,CAA6CgG,GCtC7Ca,EAdD,WACV,OACIrG,EAAAC,EAAAC,cAAA,OAAKS,UAAU,wCACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACXX,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACoG,EAAD,MACAtG,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAM5B,GAAG,aAAT,6BCLVkG,6MAKFjC,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAMV,EAAO,IAAIW,SAASF,EAAMG,QAChC5D,EAAKN,MAAMgG,SAAS,CAChBxE,MAAQ8B,EAAKJ,IAAI,SACjBkC,SAAW9B,EAAKJ,IAAI,YACpB+C,QAAU3C,EAAKJ,IAAI,sFAIvB,OAAGvC,KAAKX,MAAM6D,SACHrE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,GAAG,MAG1BL,EAAAC,EAAAC,cAAA,QAAM0E,SAAUzD,KAAKmD,cACjBtE,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,UACA7E,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,QAAQgD,GAAG,QAAQT,KAAK,QAAQsC,UAAQ,IAEpD/F,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,aACA7E,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,WAAWgD,GAAG,WAAWT,KAAK,WAAWsC,UAAQ,IAE7D/F,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,WAAf,qBACA7E,EAAAC,EAAAC,cAAA,SAAOgB,KAAK,UAAUgD,GAAG,UAAUT,KAAK,WAAWsC,UAAQ,IAE3D/F,EAAAC,EAAAC,cAAA,SAAOuD,KAAK,SAASuB,MAAM,2BA7BhBzE,aA6CZf,cAVS,SAAAC,GAEpB,MAAO,CAAE4E,UAAgC,IAArB5E,EAAMmC,KAAKI,QAGR,SAAAwB,GACvB,MAAO,CAAEgD,SAAW,SAACP,GAAD,OAAiBzC,ER7CjB,SAAA3D,GAAkC,IAA/BmC,EAA+BnC,EAA/BmC,MAAO4D,EAAwB/F,EAAxB+F,SAAUa,EAAc5G,EAAd4G,QACxC,OAAO,SAAAjD,GACAoC,IAAaa,EACZjD,EAAS,CAAEC,KAAO,kCAGlBD,EAAS,CAAEC,KAAO,qBAClBvB,EAAIgE,KAAK,QAAS,CAAElE,QAAO4D,WAAUa,YACpC9C,KAAK,SAACC,GAAQ,IACHuB,EAAYvB,EAAIE,KAAhBqB,QACU,MAAfvB,EAAIuC,QACH3C,EAAS,CAAEC,KAAO,eAAgB0B,cAGzCpB,MAAM,SAAChB,GAAQ,IACJoC,EAAYpC,EAAI2D,SAAS5C,KAAzBqB,QACR3B,EAAS,CAAEC,KAAM,sBAAuB0B,gBQ6BNqB,CAASP,OAI5CzG,CAA6C+G,GCjC7CI,EAdE,WACb,OACI3G,EAAAC,EAAAC,cAAA,OAAKS,UAAU,2CACXX,EAAAC,EAAAC,cAAA,OAAKS,UAAU,8BACXX,EAAAC,EAAAC,cAAA,sBACIF,EAAAC,EAAAC,cAAC0G,EAAD,MACJ5G,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAM5B,GAAG,KAAT,+BCJVwG,+LAME1F,KAAKX,MAAMsG,0CAKX,OADuB3F,KAAKX,MAApBV,WACYE,EAAAC,EAAAC,cAAA,4BAA0BF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,OAAK,EAACC,GAAG,aAXpDE,aAwBNf,cATS,SAAAC,GACpB,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAMG,OAGK,SAAA4D,GACvB,MAAO,CAAEsD,OAAS,kBAAMtD,ELWjB,SAAAA,GACHA,EAAS,CAAEC,KAAO,WAClBD,EAAS,CAAEC,KAAO,mBKTXjE,CAA6CqH,GCT7CE,EAZD,WACV,OACI/G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,KACIhH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAO7G,OAAK,EAAC8G,KAAK,IAAIC,UAAWd,IACjCrG,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,YAAYC,UAAWR,IACnC3G,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAO7G,OAAK,EAAC8G,KAAK,WAAWC,UAAW7G,EAAc0D,KACtDhE,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,kBAAkBC,UAAW7G,EAAc8G,KACvDpH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAOC,KAAK,UAAUC,UAAW7G,EAAcuG,gDCX9CQ,EACF,CAAEvH,aAAc+C,eAAeC,QAAQ,UAgBnClD,EAbF,WAAkC,IAAjCH,EAAiC6H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,EAAcI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAOC,EAAOhE,MACV,IAAK,QAED,OADAZ,eAAe6E,QAAQ,QAASD,EAAOrB,OAChC,CAAEtG,YAAY,GACzB,IAAK,SAED,OADA+C,eAAe8E,WAAW,SACnB,CAAE7H,YAAY,GACzB,QACI,OAAOL,ICjBN4H,EAAgB,CAAErF,MAAQ,KAAMH,QAAS,IAkBvCD,EAhBF,WAAkC,IAAjCnC,EAAiC6H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,EAAcI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAOC,EAAOhE,MACV,IAAK,eAID,OAAO/D,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAZ,CAAmBuC,OAAO,IAC9B,IAAK,eACD,OAAOtC,OAAAC,EAAA,EAAAD,CAAA,GAAK+H,EAAO7F,MACvB,IAAK,kBACD,OAAOlC,OAAAC,EAAA,EAAAD,CAAA,GAAKD,EAAZ,CAAmBoC,QAAS4F,EAAO5F,UACvC,QACI,OAAOpC,ICXN4H,GAAe,CACxBzH,KAAMgI,EACNhG,KAAMiG,GAGJC,GAAaC,0BAAgB,CAAEnI,OAAMgC,SAS5BoG,GAPK,SAACvI,EAAOgI,GAIxB,MAHmB,cAAhBA,EAAOhE,OACNhE,EAAQ4H,IAELS,GAAWrI,EAAOgI,ICTvBQ,GAAaC,0BAAgBC,IAAOC,KAE3BC,yBACXL,GACAX,GACwCY,ICCtCK,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOjG,GAC9BkG,UAAUC,cACPvC,SAASqC,GACTlF,KAAK,SAAAqF,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzJ,QACfqJ,UAAUC,cAAcM,YAI1BC,QAAQC,IACN,gHAKE3G,GAAUA,EAAO4G,UACnB5G,EAAO4G,SAASR,KAMlBM,QAAQC,IAAI,sCAGR3G,GAAUA,EAAO6G,WACnB7G,EAAO6G,UAAUT,UAO5BjF,MAAM,SAAA2F,GACLJ,QAAQI,MAAM,4CAA6CA,eCvF3DC,GACF3J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACI5J,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAUC,MAAOA,IACb9J,EAAAC,EAAAC,cAAC6J,EAAD,QAKZC,IAASC,OAAON,GAAKO,SAASC,eAAe,SDKtC,SAAkBvH,GACvB,GAA6C,kBAAmBkG,UAAW,CAGzE,GADkB,IAAIsB,IAAIpJ,GAAwBwH,OAAOC,SAAS/G,MACpD2I,SAAW7B,OAAOC,SAAS4B,OAIvC,OAGF7B,OAAO8B,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,GAAA0B,OAAMvJ,GAAN,sBAEPsH,IAgEV,SAAiCO,EAAOjG,GAEtC4H,MAAM3B,GACHlF,KAAK,SAAA+C,GAEJ,IAAM+D,EAAc/D,EAASpE,QAAQoB,IAAI,gBAEnB,MAApBgD,EAASP,QACO,MAAfsE,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAMhH,KAAK,SAAAqF,GACjCA,EAAa4B,aAAajH,KAAK,WAC7B6E,OAAOC,SAASoC,aAKpBjC,GAAgBC,EAAOjG,KAG1BmB,MAAM,WACLuF,QAAQC,IACN,mEArFAuB,CAAwBjC,EAAOjG,GAI/BkG,UAAUC,cAAc4B,MAAMhH,KAAK,WACjC2F,QAAQC,IACN,+GAMJX,GAAgBC,EAAOjG,MC9B3BmG","file":"static/js/main.c2cd9855.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst AuthMixinBase = ({ isLoggedIn, children }) => {\r\n    return !isLoggedIn ? <Redirect exact to='/'/> : children\r\n}\r\n\r\nAuthMixinBase.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    children: PropTypes.element.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state.auth }\r\n}\r\n\r\nconst AuthMixin = connect(mapStateToProps)(AuthMixinBase)\r\n\r\nconst loginRequired = Component => props => {\r\n    return(\r\n        <AuthMixin>\r\n            <Component {...props}/>\r\n        </AuthMixin>\r\n    )\r\n}\r\n\r\nexport default AuthMixin\r\nexport { loginRequired }","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\n/** Ruute template for registering routes within NavBar  */\r\nfunction Route(name, href, auth, hideOnAuth){\r\n    this.name = name\r\n    this.href = href\r\n    this.auth = auth\r\n    this.hideOnAuth = hideOnAuth\r\n}\r\n\r\nclass Navbar extends Component{\r\n    static propTypes = {\r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n        avatar: PropTypes.string,\r\n        name: PropTypes.string\r\n    }\r\n    static routes = [\r\n        new Route('Logout', '/logout', true)\r\n    ]\r\n    /** Filter routes that require authentication */\r\n    generateRoutes(){\r\n        if(!this.props.isLoggedIn){\r\n            // Filter routes that do not require auth\r\n            return Navbar.routes.filter((route) => !route.auth)\r\n        }\r\n        else{\r\n            // Filter routes that require auth and are not flagged to hide on auth\r\n            return Navbar.routes.filter((route) => route.auth && !route.hideOnAuth)\r\n        }\r\n    }\r\n    renderAvatar = () =>{\r\n        return(\r\n            <figure className=\"avatar animated rotateIn delay-2\">\r\n                <NavLink to=\"/profile\">\r\n                    <img \r\n                        src={this.props.avatar || process.env.REACT_APP_DEFAULT_AVATAR} \r\n                        alt={this.props.name}\r\n                    />\r\n                </NavLink>\r\n            </figure>\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <nav className=\"flex navbar animated slideInDown\">\r\n                {this.generateRoutes().map((route) => (\r\n                    <NavLink className=\"button button-outline\" to={route.href} key={route.href}>\r\n                        {route.name}\r\n                    </NavLink>\r\n                ))}\r\n                {this.props.isLoggedIn && this.renderAvatar()}\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state.auth, avatar: state.user.profile.avatar, name: state.user.profile.name }\r\n}\r\n\r\nexport { Navbar as NavbarComponent }\r\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <em>Loading...</em>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Card = ({ email, profile }) => {\r\n    const avatar = profile.avatar || process.env.REACT_APP_DEFAULT_AVATAR \r\n    return(\r\n        <article className=\"flex card box v-center\">\r\n            <div className=\"avatar\">\r\n                <figure className=\"animated rotateIn delay-2\">\r\n                    <img src={avatar} alt=\"avatar\"/>\r\n                </figure>\r\n            </div>\r\n            <div className=\"flex container animated fadeIn delay-3\">\r\n                <span className=\"fluid\">\r\n                    <h1>{profile.name}</h1>\r\n                    <h2>{email}</h2>\r\n                </span>\r\n                <div className=\"flex options\">\r\n                    <Link className=\"button\" to=\"/profile/update\">\r\n                        Update Profile\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    )\r\n}\r\n\r\nCard.propTypes = {\r\n    email: PropTypes.string.isRequired,\r\n    profile: PropTypes.shape({\r\n        name: PropTypes.string\r\n    }).isRequired\r\n}\r\n\r\nexport default Card","import axios from 'axios'\r\n\r\n/**\r\n * Axios configuration\r\n */\r\nconst api = axios.create({\r\n    baseURL : process.env.REACT_APP_API_URL,\r\n    headers: { \r\n        'Access-Control-Allow-Origin' : '*',\r\n        'Authorization' : null\r\n    }\r\n})\r\n\r\n// Inject concurrent auth token into each request\r\napi.interceptors.request.use((config) => {\r\n    config.headers.Authorization = sessionStorage.getItem('token')\r\n    return config\r\n}, err => Promise.reject(err))\r\n\r\n\r\nexport default api","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Loader from 'utils/Loader'\r\nimport Card from '../components/Card'\r\nimport { connect } from 'react-redux'\r\nimport { profile } from 'actions/user'\r\n\r\nclass CardContainer extends Component{\r\n    static propTypes = {\r\n        isLoading: PropTypes.bool.isRequired,\r\n        email: PropTypes.string,\r\n        profile: PropTypes.object,\r\n        loadProfile: PropTypes.func.isRequired\r\n    }\r\n    componentWillMount(){\r\n        this.props.loadProfile()\r\n    }\r\n    \r\n    render(){\r\n        const { isLoading, email, profile } = this.props\r\n        return isLoading ? <Loader/> : <Card {...{email, profile}}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state.user, isLoading: !state.user.email }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { loadProfile: () => dispatch(profile()) }\r\n}\r\n\r\nexport { CardContainer }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardContainer)","import api from 'api'\r\n\r\nexport const register = ({ email, password, confirm }) => {\r\n    return dispatch => {\r\n        if(password !== confirm){\r\n            dispatch({ type : 'PASSWORD_CONFIRMATION_FAILED' })\r\n        }\r\n        else{\r\n            dispatch({ type : 'REGISTERING_USER' })\r\n            api.post('/user', { email, password, confirm })\r\n            .then((res) => {\r\n                const { message } = res.data\r\n                if(res.status === 200){\r\n                    dispatch({ type : 'USER_CREATED', message })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                const { message } = err.response.data\r\n                dispatch({ type: 'REGISTRATION_FAILED', message })\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const profile = () => {\r\n    return dispatch => {\r\n        dispatch({ type : 'FETCHING_PROFILE' })\r\n        api.get('/user')\r\n        .then((res) => {\r\n            const { email, profile } = res.data\r\n            dispatch({ type : 'USER_PROFILE', user : { email, profile } })\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'LOGIN_REQUIRED' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const update = ({ name }) => {\r\n    return dispatch => {\r\n        dispatch({ type: 'UPDATING_PROFILE' })\r\n        api.put('/user', { name })\r\n        .then((res) => {\r\n            const { message } = res.data\r\n            dispatch({ \r\n                type: 'PROFILE_UPDATED', \r\n                message, \r\n                profile: { name } \r\n            })\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'LOGIN_REQUIRED' })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Navbar from 'app/components/Navbar'\r\nimport { default as ProfileCard } from './containers/CardContainer' \r\n\r\nconst Profile = () => {\r\n    return(\r\n        <div className=\"profile overlay\">\r\n            <Navbar/>\r\n            <div id=\"card-container\" className=\"flex v-center h-center\">\r\n                <ProfileCard/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { isEmpty } from 'lodash'\r\nimport { update } from 'actions/user'\r\n\r\nclass UpdateForm extends Component{\r\n    static propTypes = {\r\n        profile: PropTypes.shape({\r\n            name: PropTypes.string\r\n        }).isRequired\r\n    }\r\n    state = { redirect: false }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const data = new FormData(event.target)\r\n        this.props.update({\r\n            name : data.get('name')\r\n        })\r\n    }\r\n    render(){\r\n        const { profile } = this.props\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input id=\"name\" name=\"name\" placeholder={!isEmpty(profile) && \"name\" in profile && profile.name}/>\r\n\r\n                <input type=\"submit\" value=\"Save\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { profile: state.user.profile }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { update : profile => dispatch(update(profile)) }\r\n}\r\n\r\nexport { UpdateForm }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateForm)","import React from 'react'\r\nimport Form from './components/Form'\r\nimport withNavbar from 'utils/withNavbar'\r\n\r\nconst Update = () => {\r\n    return(\r\n        <div className=\"flex update-profile overlay v-center h-center\">\r\n            <div className=\"flex box animated fadeInUp\">\r\n                <h2>Update Profile</h2>\r\n                <Form/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withNavbar(Update)","import React, { Fragment } from 'react'\r\nimport Navbar from 'app/components/Navbar'\r\n\r\nconst withNavbar = Component => props => {\r\n    return(\r\n        <Fragment>\r\n            <Navbar/>\r\n            <Component {...props}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default withNavbar","import api from 'api'\r\n\r\nlet loginAttempt = 0\r\n\r\n/** Throttle logins by resetting loginAttempt after some time */\r\n// eslint-disable-next-line\r\nconst loginResetHandler = setInterval(\r\n    () => { loginAttempt = 0 },\r\n    1000 * process.env.REACT_APP_LOGIN_TIMEOUT\r\n)\r\n\r\n// TODO: Disable throttling after login and re-enable after logout to prevent memory leaking\r\n\r\nexport const login = ({ email, password }) => {\r\n    loginAttempt++\r\n    return dispatch => {\r\n        if(loginAttempt > process.env.REACT_APP_MAX_LOGIN_ATTEMPTS){\r\n            dispatch({ type : 'LOGIN_TIMEOUT' })\r\n        }\r\n        else{\r\n            dispatch({ type : 'LOGIN_ATTEMPT' })\r\n            api.post('/authenticate', { email, password })\r\n            .then((res) => {\r\n                if(res.status === 200){\r\n                    const { token } = res.data\r\n                    loginAttempt = 0\r\n                    dispatch({ type : 'LOGIN', token })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                dispatch({ type : 'LOGIN_FAILURE' })\r\n            })\r\n        }\r\n    }\r\n}    \r\n\r\nexport const logout = () => { \r\n    return dispatch => {\r\n        dispatch({ type : 'LOGOUT' })\r\n        dispatch({ type : 'RESET_APP' })\r\n    }\r\n }","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { login } from 'actions/auth'\r\n\r\nclass LoginForm extends Component{\r\n    static propTypes = { \r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n        login: PropTypes.func.isRequired\r\n    }\r\n    state = { show: false }\r\n    handleSubmit = event => {\r\n        event.preventDefault()\r\n        const data = new FormData(event.target)\r\n        this.props.login({ \r\n            email : data.get('email'),\r\n            password : data.get('password')\r\n        })\r\n    }\r\n    toggleVisibility = () => {\r\n        this.setState({ show: !this.state.show })\r\n    }\r\n    render(){\r\n        if(this.props.isLoggedIn){\r\n            return <Redirect to='/profile'/>\r\n        }\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input id=\"email\" name=\"email\" type=\"email\" required/>\r\n\r\n                <label htmlFor=\"password\">\r\n                    Password\r\n                    <i \r\n                        className={this.state.show ? \"fas fa-eye\" : \"fas fa-eye-slash\"}\r\n                        onClick={this.toggleVisibility}\r\n                    />\r\n                </label>\r\n                <input id=\"password\" name=\"password\" type={this.state.show ? \"text\" : \"password\"} required/>\r\n\r\n                <br/>\r\n                <input className=\"button button-outline\" type=\"submit\" value=\"Login\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state.auth }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { login: credentials => dispatch(login(credentials)) }\r\n}\r\n\r\nexport { LoginForm }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from './components/Form'\r\n\r\n/** Login portal */\r\nconst Login = () => {\r\n    return(\r\n        <div className=\"login overlay flex h-center v-center\">\r\n            <div className=\"form box animated fadeInUp\">\r\n                <h2>Login</h2>\r\n                <Form/>\r\n                <Link to='/register'>\r\n                    Don't have an account?\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { register } from 'actions/user'\r\n\r\nclass RegisterForm extends Component{\r\n    static propTypes = {\r\n        redirect: PropTypes.bool.isRequired,\r\n        register: PropTypes.func.isRequired\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        const data = new FormData(event.target)\r\n        this.props.register({\r\n            email : data.get('email'),\r\n            password : data.get('password'),\r\n            confirm : data.get('confirm')\r\n        })\r\n    }\r\n    render(){\r\n        if(this.props.redirect){\r\n            return <Redirect exact to='/'/>\r\n        }\r\n        return(\r\n            <form onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input name=\"email\" id=\"email\" type=\"email\" required/>\r\n\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input name=\"password\" id=\"password\" type=\"password\" required/>\r\n                \r\n                <label htmlFor=\"confirm\">Confirm Password:</label>\r\n                <input name=\"confirm\" id=\"confirm\" type=\"password\" required/>\r\n\r\n                <input type=\"submit\" value=\"Create Account\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    // NOTE: user.email when null indicates user has not been created\r\n    return { redirect : state.user.email === false }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { register : (credentials) => dispatch(register(credentials)) }\r\n}\r\n\r\nexport { RegisterForm }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from './components/Form'\r\n\r\nconst Register = () => {\r\n    return(\r\n        <div className=\"register overlay flex h-center v-center\">\r\n            <div className=\"form box animated fadeInUp\">\r\n                <h2>Register</h2>\r\n                    <Form/>\r\n                <Link to=\"/\">\r\n                    Already have an account?\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout } from 'actions/auth'\r\n\r\nclass Logout extends Component{\r\n    static propTypes = {\r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n        logout: PropTypes.func.isRequired\r\n    }\r\n    componentWillMount(){\r\n        this.props.logout() \r\n    }\r\n\r\n    render(){\r\n        const { isLoggedIn } = this.props\r\n        return isLoggedIn ? <em>Logging out...</em> : <Redirect exact to=\"/\"/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { ...state.auth }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return { logout : () => dispatch(logout()) }\r\n}\r\n\r\nexport { Logout as LogoutComponent }\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout)","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { loginRequired } from 'utils/auth'\r\nimport Profile from './Profile'\r\nimport Update from './Update'\r\nimport Login from './Login'\r\nimport Register from './Register'\r\nimport Logout from './Logout'\r\n\r\nconst Views = () => {\r\n    return(\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Login}/>\r\n            <Route path=\"/register\" component={Register}/>\r\n            <Route exact path=\"/profile\" component={loginRequired(Profile)}/>\r\n            <Route path=\"/profile/update\" component={loginRequired(Update)}/>\r\n            <Route path=\"/logout\" component={loginRequired(Logout)}/>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default Views","\r\n/** NOTE: \r\n * This is implemented as an implicit function call\r\n * to keep state concurrent with sessionStorage \r\n * */\r\nexport const defaultState = (() => { \r\n    return { isLoggedIn: !!sessionStorage.getItem('token') }\r\n})()\r\n\r\nconst auth = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            sessionStorage.setItem('token', action.token)\r\n            return { isLoggedIn: true }\r\n        case 'LOGOUT':\r\n            sessionStorage.removeItem('token')\r\n            return { isLoggedIn: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default auth","\r\nexport const defaultState =  { email : null, profile: {} }\r\n\r\nconst user = (state = defaultState, action) => {\r\n    switch(action.type){\r\n        case 'USER_CREATED':\r\n            // NOTE: Setting email to 'false' rather than null is an indicator that user creation succeeded\r\n            // This subtle change has the neat benefit of preventing anonymous users\r\n            // from creating multiple accounts\r\n            return { ...state, email: false }\r\n        case 'USER_PROFILE':\r\n            return { ...action.user }\r\n        case 'PROFILE_UPDATED':\r\n            return { ...state, profile: action.profile }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default user","import { combineReducers } from 'redux'\r\nimport auth, { defaultState as authDefaultState } from './auth'\r\nimport user, { defaultState as userDefaultState } from './user'\r\n\r\nexport const defaultState = { \r\n    auth: authDefaultState,\r\n    user: userDefaultState\r\n}\r\n\r\nconst appReducer = combineReducers({ auth, user })\r\n\r\nconst rootReducer = (state, action) => {\r\n    if(action.type === 'RESET_APP'){\r\n        state = defaultState\r\n    }\r\n    return appReducer(state, action)\r\n}\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport rootReducer, { defaultState } from 'reducers'\r\n\r\nconst middleware = applyMiddleware(thunk, logger)\r\n\r\nexport default createStore(\r\n    rootReducer, \r\n    defaultState,\r\n    process.env.NODE_ENV === 'production' ? middleware : composeWithDevTools(middleware),\r\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport Views from 'app'\r\nimport store from 'store'\r\nimport * as serviceWorker from 'serviceWorker'\r\nimport 'styles/core.scss'\r\n\r\nconst App = (\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <Views/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n)\r\n\r\nReactDOM.render(App, document.getElementById('root'))\r\n\r\nif(process.env.NODE_ENV === 'production'){\r\n    serviceWorker.register()\r\n}\r\nelse{\r\n    serviceWorker.unregister()\r\n}\r\n\r\n"],"sourceRoot":""}